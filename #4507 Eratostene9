#include <iostream>
#include <vector>
#include <bitset>
#include <cmath>

using namespace std;


vector<unsigned int>v;

vector<unsigned int>c;

vector<unsigned int>fr;

vector<unsigned int>ciur;

bitset<10000001>f;

unsigned int maxi;

void erat()
{
    ciur.resize(maxi+1);
    for(unsigned int&i:c)
    {
        //cout<<i<<" ";
        ciur[i]+=fr[i]-1;
        for(unsigned int d=2;i*d<=maxi;d++) {
            ciur[i*d]+=fr[i];
            //cout<<i*d<<" "<<ciur[i*d]<<"\n";
        }
    }
    long long int p=0;
    for (unsigned int &i: v)
        p+=ciur[i];

    cout<<p;
}

int main() {

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    unsigned int n;
    cin >> n ;
    v.resize(n);
    for(unsigned int i=0;i<n;i++){
        cin>>v[i];
        maxi=max(v[i],maxi);
    }
    fr.resize(maxi+1);
    for(auto&i:v)
    {
        fr[i]++;
        if(false == f[i]){
            f[i]=true;
            c.push_back(i);
        }
    }
    erat();
    return 0;
}
